/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddHospitalWard.java
 *
 * Created on Sep 7, 2014, 10:13:03 PM
 */
package gui.Anu;

import controller.anu.HospitalController;
import controller.anu.WardController;
import controller.SearchableCombo;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Requester;
import model.Ward;

/**
 *
 * @author Anuradha
 */
public class AddHospitalWard extends javax.swing.JInternalFrame {

    private String oldHospitalName = "";
    private String oldWardName = "";

    /**
     * Creates new form AddRequestor
     */
    public AddHospitalWard() {
        initComponents();
        setComboData();
        setWardComboData();
    }

    private void setComboData() {
        try {
            hospitalCombo.removeAllItems();
            ResultSet rst = HospitalController.getAllHospitals();
            while (rst.next()) {
                String hospital = rst.getString("Name");
                hospitalCombo.addItem(hospital);
            }
            new SearchableCombo().setSearchableCombo(hospitalCombo, true);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setWardComboData() {
        try {
            wardCombo.removeAllItems();
            ResultSet rst = WardController.getAllWards();
            while (rst.next()) {
                String ward = rst.getString("Name");
                wardCombo.addItem(ward);
            }
            new SearchableCombo().setSearchableCombo(wardCombo, true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        addWardText = new javax.swing.JTextField();
        addWardBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        addHospitalText = new javax.swing.JTextField();
        addHospitalBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        hospitalCombo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        wardCombo = new javax.swing.JComboBox();
        updateHospitalText = new javax.swing.JTextField();
        UpdateWardText = new javax.swing.JTextField();
        updateHospitalBtn = new javax.swing.JButton();
        deleteHospitalBtn = new javax.swing.JButton();
        deleteWardBtn = new javax.swing.JButton();
        updateWardBtn = new javax.swing.JButton();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Hospital/Ward"));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Ward"));

        jLabel4.setText("Ward*");

        addWardText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addWardTextKeyTyped(evt);
            }
        });

        addWardBtn.setText("Add");
        addWardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addWardBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addWardText, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addWardBtn)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(addWardText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(addWardBtn)
                .addGap(28, 28, 28))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Add hospital"));

        jLabel1.setText("Hospital*");

        addHospitalText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addHospitalTextKeyTyped(evt);
            }
        });

        addHospitalBtn.setText("Add");
        addHospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHospitalBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addHospitalText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addHospitalBtn)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(addHospitalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(addHospitalBtn)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Add Hospital/Ward", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Update Hospital/Ward"));

        hospitalCombo.setEditable(true);
        hospitalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalComboActionPerformed(evt);
            }
        });

        jLabel5.setText("Select Hospital");

        jLabel6.setText("Select Ward");

        wardCombo.setEditable(true);
        wardCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardComboActionPerformed(evt);
            }
        });

        updateHospitalText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                updateHospitalTextKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                updateHospitalTextKeyTyped(evt);
            }
        });

        UpdateWardText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UpdateWardTextKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                UpdateWardTextKeyTyped(evt);
            }
        });

        updateHospitalBtn.setText("Update Hospital");
        updateHospitalBtn.setEnabled(false);
        updateHospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHospitalBtnActionPerformed(evt);
            }
        });

        deleteHospitalBtn.setText("Delete Hospital");
        deleteHospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHospitalBtnActionPerformed(evt);
            }
        });

        deleteWardBtn.setText("Delete Ward");
        deleteWardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteWardBtnActionPerformed(evt);
            }
        });

        updateWardBtn.setText("Update Ward");
        updateWardBtn.setEnabled(false);
        updateWardBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateWardBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(wardCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(hospitalCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(53, 53, 53))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deleteWardBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteHospitalBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(updateWardBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateHospitalBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateHospitalText)
                    .addComponent(UpdateWardText, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(updateHospitalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wardCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(UpdateWardText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateHospitalBtn)
                    .addComponent(deleteHospitalBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateWardBtn)
                    .addComponent(deleteWardBtn))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Update Hospital/Ward", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addHospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHospitalBtnActionPerformed
        try {
            if (addHospitalText.getText().length() < 1) {
                JOptionPane.showMessageDialog(null, "Error: Please fill the required fields!");
            } else {
                String hospital = addHospitalText.getText();
                Requester requestor = new Requester(hospital);
                int res = HospitalController.addRequestor(requestor);

                if (res == 1) {
                    JOptionPane.showMessageDialog(null, "Added Succesfully");
                    addHospitalText.setText("");
                    setComboData();

                } else {
                    JOptionPane.showMessageDialog(null, "Error!");
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_addHospitalBtnActionPerformed

    private void addWardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addWardBtnActionPerformed
        try {
            if (addWardText.getText().length() < 1) {
                JOptionPane.showMessageDialog(null, "Error: Please fill the required fields!");
            } else {
                String newWard = addWardText.getText();
                Ward ward = new Ward(newWard);
                int res = WardController.addWard(ward);

                if (res == 1) {
                    JOptionPane.showMessageDialog(null, "Added Succesfully");
                    addWardText.setText("");
                    setWardComboData();

                } else {
                    JOptionPane.showMessageDialog(null, "Error!");
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addWardBtnActionPerformed

    private void hospitalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalComboActionPerformed
        oldHospitalName = "" + hospitalCombo.getSelectedItem();
        updateHospitalText.setText(oldHospitalName);
        updateHospitalBtn.setEnabled(false);
        deleteHospitalBtn.setEnabled(true);
    }//GEN-LAST:event_hospitalComboActionPerformed

    private void wardComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardComboActionPerformed
        oldWardName = "" + wardCombo.getSelectedItem();
        UpdateWardText.setText(oldWardName);
        updateWardBtn.setEnabled(false);
        deleteWardBtn.setEnabled(true);
    }//GEN-LAST:event_wardComboActionPerformed

    private void updateHospitalTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateHospitalTextKeyPressed

    }//GEN-LAST:event_updateHospitalTextKeyPressed

    private void UpdateWardTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UpdateWardTextKeyPressed

    }//GEN-LAST:event_UpdateWardTextKeyPressed

    private void updateHospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHospitalBtnActionPerformed
        try {
            if (updateHospitalText.getText().length() < 1) {
                JOptionPane.showMessageDialog(null, "Error: Please fill the required fields!");
            } else {
                Requester oldHospital = new Requester(oldHospitalName);
                Requester newHospital = new Requester(updateHospitalText.getText());
                int res = HospitalController.updateHospital(oldHospital, newHospital);
                if (res == 1) {
                    JOptionPane.showMessageDialog(null, "Updated Succesfully");
                    updateHospitalText.setText("");
                    setComboData();
                    updateHospitalBtn.setEnabled(false);

                } else {
                    JOptionPane.showMessageDialog(null, "Error!");
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: To update this hospital you need to delete all the other records having this hospital!");
        }
    }//GEN-LAST:event_updateHospitalBtnActionPerformed

    private void updateWardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateWardBtnActionPerformed
        try {
            if (UpdateWardText.getText().length() < 1) {
                JOptionPane.showMessageDialog(null, "Error: Please fill the required fields!");
            } else {
                Ward oldWard = new Ward(oldWardName);
                Ward newWard = new Ward(UpdateWardText.getText());
                int res = WardController.updateWard(oldWard, newWard);
                if (res == 1) {
                    JOptionPane.showMessageDialog(null, "Updated Succesfully");
                    UpdateWardText.setText("");
                    setWardComboData();
                    updateWardBtn.setEnabled(false);

                } else {
                    JOptionPane.showMessageDialog(null, "Error!");
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: To update this ward you need to delete all the other records having this ward!");
        }
    }//GEN-LAST:event_updateWardBtnActionPerformed

    private void deleteHospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHospitalBtnActionPerformed
        try {
            Requester deletedHospital = new Requester(updateHospitalText.getText());
            int res = HospitalController.deleteHospital(deletedHospital);
            if (res == 1) {
                JOptionPane.showMessageDialog(null, "Deleted Succesfully");
                setComboData();

            } else {
                JOptionPane.showMessageDialog(null, "Error!");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: To delete this hospital you need to delete all the other records having this hospital!");
        }
    }//GEN-LAST:event_deleteHospitalBtnActionPerformed

    private void deleteWardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteWardBtnActionPerformed
        try {
            Ward deletedWard = new Ward(UpdateWardText.getText());
            int res = WardController.deleteWard(deletedWard);
            if (res == 1) {
                JOptionPane.showMessageDialog(null, "Deleted Succesfully");
                setWardComboData();

            } else {
                JOptionPane.showMessageDialog(null, "Error!");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddHospitalWard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: To delete this ward you need to delete all the other records having this ward!");
        }
    }//GEN-LAST:event_deleteWardBtnActionPerformed

    private void addHospitalTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addHospitalTextKeyTyped
        if (addHospitalText.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_addHospitalTextKeyTyped

    private void addWardTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addWardTextKeyTyped
        if (addWardText.getText().length() >= 30) {
            evt.consume();
        }
    }//GEN-LAST:event_addWardTextKeyTyped

    private void updateHospitalTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateHospitalTextKeyTyped
        updateHospitalBtn.setEnabled(true);
        deleteHospitalBtn.setEnabled(false);
        if (updateHospitalText.getText().length() >= 50) {
            evt.consume();
        }
    }//GEN-LAST:event_updateHospitalTextKeyTyped

    private void UpdateWardTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UpdateWardTextKeyTyped
        updateWardBtn.setEnabled(true);
        deleteWardBtn.setEnabled(false);
        if (UpdateWardText.getText().length() >= 30) {
            evt.consume();
        }
    }//GEN-LAST:event_UpdateWardTextKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField UpdateWardText;
    private javax.swing.JButton addHospitalBtn;
    private javax.swing.JTextField addHospitalText;
    private javax.swing.JButton addWardBtn;
    private javax.swing.JTextField addWardText;
    private javax.swing.JButton deleteHospitalBtn;
    private javax.swing.JButton deleteWardBtn;
    private javax.swing.JComboBox hospitalCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton updateHospitalBtn;
    private javax.swing.JTextField updateHospitalText;
    private javax.swing.JButton updateWardBtn;
    private javax.swing.JComboBox wardCombo;
    // End of variables declaration//GEN-END:variables
}
